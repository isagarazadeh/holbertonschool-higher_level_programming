>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

>>> matrix = [
...     [1, 2, 3],
...     [4, 5, 6]
... ]
>>> print(matrix_divided(matrix, 3))
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

>>> matrix = [
...     [3, 6, 9],
...     [18, 21, 24]
... ]
>>> print(matrix_divided(matrix, 3))
[[1.0, 2.0, 3.0], [6.0, 7.0, 8.0]]

>>> matrix = "good"
>>> print(matrix_divided(matrix, 3))
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = [
...     [1, 2, 3],
...     [4, 5, 6]
... ]
>>> print(matrix_divided(matrix, "good"))
Traceback (most recent call last):
TypeError: div must be a number

>>> matrix = [
...     [1, 2, 3],
...     [4, 5, 4]
... ]
>>> print(matrix_divided(matrix, 0))
Traceback (most recent call last):
ZeroDivisionError: division by zero

>>> matrix = [
...     [1, 2, 3],
...     [4, 5, 6, 7, 8]
... ]
>>> print(matrix_divided(matrix, 3))
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

>>> matrix = [
...     [1, 2, 3],
...     [4, 5, 4]
... ]
>>> print(matrix_divided(matrix))
Traceback (most recent call last):
TypeError: matrix_divided() missing 1 required positional argument: 'div'

>>> matrix = [
...     [1, 2, 3],
...     [4, 5, 4]
... ]
>>> print(matrix_divided(matrix, float('inf')))
[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]
